using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace PasswordGenerator
{
    public partial class frmPassword : Form
    {

        string password = "";
        string strLower = "";
        string strUpper = "";
        string strNums = "";
        string strSpecial = "";
        int length = 0;
        char[] lowerChars = { 'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'};
        char[] upperChars = { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z' };
        char[] specialChars = { '!','$','%','£','^','&','*','(',')','_','+', '{', '}', '[', ']', ',', '#', '@', '~', '?'};
        char[] numbers = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' };
        ArrayList allChars = new ArrayList();
        int counter = 0;

        public frmPassword()
        {
            InitializeComponent();
        }

        private void cbLowerCase_CheckedChanged(object sender, EventArgs e)
        {
             
           /* Int32.TryParse(textBoxUserLength.Text, out length);
            const string chars = "abcdefghijklmnopqrstuvwxyz";
            var random = new Random();
            txtCheckboxPassword.Text = new string(Enumerable.Repeat(chars, length).Select(s => s[random.Next(s.Length)]).ToArray());*/
        }

        private void cbUpperCase_CheckedChanged(object sender, EventArgs e)
        {
            /*Int32.TryParse(textBoxUserLength.Text, out length);
            const string chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
            var random = new Random();
            txtCheckboxPassword.Text = new string(Enumerable.Repeat(chars, length).Select(s => s[random.Next(s.Length)]).ToArray());*/
        }

        private void cbNumeric_CheckedChanged(object sender, EventArgs e)
        {
            /*Int32.TryParse(textBoxUserLength.Text, out length);
            const string chars = "0123456789";
            var random = new Random();
            txtCheckboxPassword.Text = new string(Enumerable.Repeat(chars, length).Select(s => s[random.Next(s.Length)]).ToArray());*/
        }

        private void cbUniqueCharacters_CheckedChanged(object sender, EventArgs e)
        {
            /*Int32.TryParse(textBoxUserLength.Text, out length);
            const string chars = "!$%^£^&*()_+{}[]'#@~?";
            var random = new Random();
            txtCheckboxPassword.Text = new string(Enumerable.Repeat(chars, length).Select(s => s[random.Next(s.Length)]).ToArray());*/
        }

        private void btnGenerate_Click(object sender, EventArgs e)
        {
            password = "";
            if (cbLowerCase.Checked == true) {
                ++counter;
                Int32.TryParse(textBoxUserLength.Text, out length);
                const string chars = "abcdefghijklmnopqrstuvwxyz";
                allChars.Add(chars);
                var random = new Random();
                //txtCheckboxPassword.Text = new string(Enumerable.Repeat(chars, length).Select(s => s[random.Next(s.Length)]).ToArray());
                strLower = new string(Enumerable.Repeat(chars, length).Select(s => s[random.Next(s.Length)]).ToArray());

            }

            if (cbUpperCase.Checked == true)
            {
                ++counter;
                Int32.TryParse(textBoxUserLength.Text, out length);
                const string chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
                allChars.Add(chars);
                var random = new Random();
                //txtCheckboxPassword.Text = new string(Enumerable.Repeat(chars, length).Select(s => s[random.Next(s.Length)]).ToArray());
                strUpper = new string(Enumerable.Repeat(chars, length).Select(s => s[random.Next(s.Length)]).ToArray());
            }

            if (cbNumeric.Checked == true)
            {
                ++counter;
                Int32.TryParse(textBoxUserLength.Text, out length);
                const string chars = "0123456789";
                allChars.Add(chars);
                var random = new Random();
                //txtCheckboxPassword.Text = new string(Enumerable.Repeat(chars, length).Select(s => s[random.Next(s.Length)]).ToArray());
                strNums = new string(Enumerable.Repeat(chars, length).Select(s => s[random.Next(s.Length)]).ToArray());
            }

            if (cbUniqueCharacters.Checked == true)
            {
                ++counter;
                Int32.TryParse(textBoxUserLength.Text, out length);
                const string chars = "!$%^£^&*()_+{}[]#@~?";
                allChars.Add(chars);
                var random = new Random();
                //txtCheckboxPassword.Text = new string(Enumerable.Repeat(chars, length).Select(s => s[random.Next(s.Length)]).ToArray());
                strSpecial = new string(Enumerable.Repeat(chars, length).Select(s => s[random.Next(s.Length)]).ToArray());
            }

           
            FinalPassword();
            password = txtCheckboxPassword.Text;
            CheckStrength(password);

            

        }
        public void FinalPassword() {
            string fullChars = strLower + strUpper + strNums + strSpecial;
            if (cbLowerCase.Checked == true)
            {
                password += strLower[0];
                fullChars += strLower;
            }
            if (cbUpperCase.Checked == true)
            {
                password += strUpper[0];
                fullChars += strUpper;
            }
            if (cbNumeric.Checked == true)
            {
                password += strNums[0];
                fullChars += strNums;
            }
            if (cbUniqueCharacters.Checked == true)
            {
                password += strSpecial[0];
                fullChars += strSpecial;
            }


            Random rnd = new Random();
            for (int i = counter; i < length; ++i) {
                
                int fill = rnd.Next(0, fullChars.Length);
                password += fullChars[fill];
                //password += new string(Enumerable.Repeat(fullChars, length).Select(s => s[rnd.Next(s.Length)]).ToArray());
            }
            txtCheckboxPassword.Text = password;
            fullChars = "";
            counter = 0;
        }

        public void CheckStrength(string str)
        {
            password = str;
            char[] checkChars = password.ToCharArray();
            bool containsLower = true;
            bool containsUpper = false;
            bool containsNum = false;
            bool containsSpecial = false;
            int passwordStrength = 0;
            for (int i = 0; i< password.Length; ++i)
            {
                for (int j = 0; j< lowerChars.Length; ++j)
                {
                    if (checkChars[i] == lowerChars[j])
                    {
                        containsLower = true;
                        ++passwordStrength;
                        break;
                    }
                }
            }

            for (int i = 0; i < password.Length; ++i)
            {
                for (int j = 0; j < upperChars.Length; ++j)
                {
                    if (checkChars[i] == upperChars[j])
                    {
                        containsUpper = true;
                        ++passwordStrength;
                        break;
                    }
                }
            }

            for (int i = 0; i < password.Length; ++i)
            {
                for (int j = 0; j < specialChars.Length; ++j)
                {
                    if (checkChars[i] == specialChars[j])
                    {
                        containsSpecial = true;
                        ++passwordStrength;
                        break;
                    }
                }
            }

            for (int i = 0; i < password.Length; ++i)
            {
                for (int j = 0; j < numbers.Length; ++j)
                {
                    if (checkChars[i] == numbers[j])
                    {
                        containsNum = true;
                        ++passwordStrength;
                        break;
                    }
                }
            }
            
            if (passwordStrength == 4)
            {
                MessageBox.Show("This is a very strong password");
            }

            if (passwordStrength < 4)
            {
                MessageBox.Show("Password could be stronger");
                if (containsLower == false)
                {
                    MessageBox.Show("No lower case letter");
                }

                if (containsUpper == false)
                {
                    MessageBox.Show("No upper case letter");
                }

                if (containsNum == false)
                {
                    MessageBox.Show("No number");
                }

                if (containsSpecial == false)
                {
                    MessageBox.Show("No special character");
                }
            }

           }

        }
    }

